---
import FormattedDate from "../components/FormattedDate.astro";
import RichText from "../components/rich-text/RichText.tsx";
import Navigation from "../components/Navigation.astro";
import { CalendarFold, Mountain } from "@lucide/astro";
import BaseLayout from "./BaseLayout.astro";

interface Props {
  title: string;
  description?: string | null;
  publishedAt: string;
  heroImage: { url: string };
  authors?: any[];
  category?: {
    title: string;
    slug: string;
  };
}

const {
  title,
  description,
  content,
  publishedAt,
  heroImage,
  authors,
  category,
  categories,
} = Astro.props;
---

<BaseLayout>
  {
    heroImage?.url && (
      <section class="relative w-full">
        <img
          src={`${import.meta.env.PUBLIC_API_URL}${heroImage.url}`}
          alt={title}
          loading="eager"
          decoding="async"
          class="w-full h-[32vh] md:h-[40vh] lg:h-[50vh] min-h-[220px] max-h-[520px] object-cover"
        />

        <div class="pointer-events-none absolute inset-0">
          <div class="absolute inset-0 bg-black/40" />

          <div class="absolute inset-x-0 top-0 h-40 md:h-52 bg-gradient-to-b from-black/90 via-black/60 to-transparent" />

          <div class="absolute inset-x-0 bottom-0 h-48 md:h-64 bg-gradient-to-t from-black/95 via-black/60 to-transparent" />
        </div>

        <div class="absolute inset-0 flex flex-col">
          <div class="z-10 px-6 md:px-12 lg:px-24 pt-4 md:pt-6 pointer-events-auto">
            <Navigation parentNav="News & Industry Insights" childNav={title} />
          </div>

          <div class="z-10 mt-auto pb-6 md:pb-8 pointer-events-auto">
            <div class="max-w-[1230px] mx-auto px-6 md:px-12 lg:px-24">
              <p class="text-3xl lg:text-5xl font-normal tracking-[-1.2px] drop-shadow text-gradient">
                {title}
              </p>

              <div class="mt-3 flex flex-wrap items-center gap-x-4 gap-y-1 text-sm text-white/90">
                <p class="flex items-center gap-1">
                  <CalendarFold size={14} />
                  <span>
                    {new Date(publishedAt).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </span>
                </p>

                <p class="flex items-center text-sm font-normal leading-6 space-x-1">
                  <Mountain size={14} />
                  {categories.map((item, index) => (
                    <span key={item?.id || index}>
                      {item?.title} {index < categories.length - 1 && ","}
                    </span>
                  ))}
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>
    )
  }

  <div class="max-w-[1230px] mx-auto">
    <RichText client:load data={content} enableGutter={false} />
  </div>
</BaseLayout>
