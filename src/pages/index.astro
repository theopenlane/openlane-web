---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import MainSection from "../layouts/homepage/MainSection.astro";
import FeatureSection from "../layouts/homepage/FeatureSection.astro";
import ComplianceSection from "../layouts/homepage/ComplianceSection.astro";
import MissionSection from "../layouts/homepage/MissionSection.astro";
import PartnersSection from "../layouts/homepage/PartnersSection.astro";
import TestimonialSection from "../layouts/homepage/TestimonialSection.astro";
import LabirintSection from "../layouts/homepage/LabirintSection.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="font-outfit">
    <Header />
    <main>
      <MainSection />
      <LabirintSection />
      <FeatureSection />
      <ComplianceSection />
      <div id="marquee-wrapper" class="overflow-hidden w-full bg-infinite py-4">
        <div id="marquee-track" class="flex whitespace-nowrap w-max">
          <div class="marquee-content flex gap-12 text-xl font-normal px-4">
            <p>ðŸ˜µ Complex</p>
            <p>ðŸ«¨ Opaque</p>
            <p>ðŸ¤¢ Narrow</p>
            <p>ðŸ˜¦ Expensive</p>
          </div>
        </div>
      </div>

      <MissionSection />
      <PartnersSection />
      <!--<TestimonialSection />-->
    </main>
    <Footer />
  </body>
</html>

<script>
  import { gsap } from "gsap";

  document.addEventListener("astro:page-load", () => {
    const wrapper = document.getElementById("marquee-wrapper");
    const track = document.getElementById("marquee-track");
    const content = track.querySelector(".marquee-content");

    let totalWidth = content.offsetWidth;
    const wrapperWidth = wrapper.offsetWidth;

    while (totalWidth < wrapperWidth * 2) {
      const clone = content.cloneNode(true);
      track.appendChild(clone);
      totalWidth += clone.offsetWidth;
    }

    gsap.to(track, {
      x: `-=${content.offsetWidth}`,
      duration: 20,
      ease: "none",
      repeat: -1,
      modifiers: {
        x: (x) => `${parseFloat(x) % content.offsetWidth}px`,
      },
    });
  });
</script>
